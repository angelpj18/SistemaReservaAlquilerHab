<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAYAAAA+s9J6AAAABGdBTUEAALGPC/xhBQAABkZJREFUeF7t
        3EGO2kgYBeAcqy+Sg+Qgucisc4Y+yGyyyj6KFGXqZf6SGIY0uMF2lfk+yYoajF2F3sMFkfwBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABm9evXr5e2
        fTzbXurpQ8m8zuZ52LkyuASvAvipbZ/b9tfZlsfy3PQhzfhrHoefKxNIyCpwPYyvbfu7befyWJ7rIf1Y
        h5hKxl3jXzLXvD/KyOO1YPVA/imMf5J9E9Bpwplx1ngz7qVzzfsz7QcPg0qg2rY0kKemCWfGV+Nc+mFz
        Kq/L+6WI3C9BqkC9N5Cnhg5nxlXjO/xcmUQCVEF6RCi7IcOZ8dS4Dj9XJtGCk+9FWZY9MpTdUOHMOGo8
        a80176Mfa1imhSY/TOR70VqGKGLOX+NYo4Bd3sdPdUq4rgVmzavgqV2LmPPW+beYp6sht2th6eHcwi5F
        zPnqvGsXsNvtw4YJtbCsvRQ9t2kRc54631YFDEtSbtOCstVS9NwmRczx6zx7zM+SlOtaSLZcip5btYg5
        bh1/6wJ2q3/IcAAJSYVlL6sUMcer4+5VwFBCrktIKix7emgRc5w63p4FDCXkuoSkwrK3hxQxr6/j7F3A
        UEKuayHZ64eZS+4qYl5Xrx9lLn6Y4TYtKFv/F8Vb3lXE7F+vG6GA4b8ouF0LyyhL0m5REbNf7T9KAWPx
        BwlPrIVlpCVpd1MR83ztN9rYLUVZpgVmpCVp92YR83g9P92HB/xPC82IV8O4GOr8XY+PNl7fBXm/Fp5R
        g/27iN++ffv09evXj/k3f9fjI8l4LEO5TwvQyEV8/fLlS8aWq82I48vYLEO5X4JUgRot6KNSQB4vgapg
        KeLbFJD1JFgVMEW8TAFZXwJWQVPE/1JAtpOgVeAU8V8KyPYSuAresxdRAdlPglcBfNYiKiD7SwAriM9W
        RAVkHAliBfJZiqiAjCeBrGAevYgKyLgSzAroUYuogIwvAa2gHq2ICsg8EtQK7FGKqIDMJ4Gt4M5eRAVk
        XgluBXjWIiog80uAK8izFVEBOY4EuQI9SxEVkONJoCvYoxdRATmuuhfMaHdwO/eacdaQ4VhyU6a6J8yw
        Mr6Ms4YMx+JKCDtq4fadEPaSQFewRy9gp4gcR4JcgZ6lgJ0iMr8EuII8WwE7RWReCW4FeNYCdorIfBLY
        Cu7sBewUkXkkqBXYoxSwU0TGl4BWUI9WwE4RGVeCWQE9agE7RWQ8CWQF8+gF7BSRcSSIFchnKWCniOwv
        AawgPlsBO0VkPwleBfBZC9gpIttL4Cp4z17AThHZToJWgVPA/1JE1peAVdAU8DJFZD0JVgVMAd+miDxe
        AlXBUsDbKCKPkyBVoEYrYMbzWvesyS0zRhyfInKfFqCXtn2uQI3kd8BzL5jclKnuXTPqB0Xev5d6S2GZ
        Fp4Rb8x08QqTv+vx0YqY98+No1iuBWfEUF8sYJfH6/lpxgwXtcCMuAy9Kcx5vvYbbeyWpdyuhaUHeRSL
        ribZr/YfqYg3jx8S4pG+Cy4qYJf963WjFFEJuU0LykhL0XcVsMvr6vUjzMUPNNymBWWUpehdBezy+jrO
        3kXM+X0v5LoWkhFK+JACdjlOHW/vIj5sThxYQlJh2ctDC9jleHXcPYuohFyXkFRY9rBKAbsct46/VxGV
        kOtaSPb6YWbVAnY5fp1nj/n5TshtWlC2/i+KTQrY5Tx1vi2L6NdRbtfCsuWSdNMCdjlfnXerIm4+RybW
        wrLVknSXAnY5b51/i3lairJMC8zaS9JdC9jl/DWONYtoKcpyLTRrXg2HKGCXcdR41pqrqyDv8/PnzzWu
        hkMVsMt4alyPLOKQc2UiP378ePn+/Xsv4iPCOXQoM64a3+HnykRSxLoi3hPOvC5FzrJs6FBmfG27t4gK
        yOMlUG1LiZZeFXsgU+Qpvhe1cd4z1yk+bJhUC1Z+rEmZErIU608h7WHMPlMGso35vXOd5sOGiSVkbcvV
        4jSkp1sPY/aZOpAZf83j8HNlUgleBfB0O2QYM6+zeR52rgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPIMPH/4BJMBFX6ELlfQAAAAASUVORK5CYII=
</value>
  </data>
</root>